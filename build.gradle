buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.1.1'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.4.0.RELEASE"
}

version "0.2-SNAPSHOT"
group "au.com.redboxresearchdata.cm"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: 'maven-publish'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"
    // Custom libs
    compile 'org.postgresql:postgresql:9.4-1201-jdbc41'
    compile 'mysql:mysql-connector-java:5.1.6'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'org.apache.activemq:activemq-all:5.2.0'
    compile 'net.sf.gtools.jms:JmsCategory:0.2'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
    compile 'org.apache.tomcat.embed:tomcat-embed-logging-log4j:8.0.20'
    compile 'org.apache.tomcat:tomcat-juli:8.0.20'
    compile 'org.apache.tomcat:tomcat-jdbc:8.0.20'



    runtime "org.grails.plugins:asset-pipeline"
    runtime "org.grails.plugins:scaffolding"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

test {
    testLogging {
        exceptionFormat "full"
        showStandardStreams = true
    }
}

publishing {
    publications {
    	  mavenWar(MavenPublication) {
    	  	pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.web
    	  }
    	  
    }
    repositories {
        maven {
            credentials {
                username "$System.env.NEXUS_USERNAME"
                password "$System.env.NEXUS_PASSWORD"
            }
            url "http://dev.redboxresearchdata.com.au/nexus/content/repositories/snapshots/"
        }
    }
    }
